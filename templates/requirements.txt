<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Lanternfly Gallery · UVA</title>
  <style>
    :root{--uva-blue:#232D4B; --uva-orange:#E57200; --ink:#1f2937; --bg:#f8fafc; --card:#ffffff; --muted:#6b7280; --r:16px;}
    *{box-sizing:border-box} body{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial;background:var(--bg);color:var(--ink)}
    header{background:var(--uva-blue);color:#fff;padding:16px}
    .wrap{max-width:1000px;margin:0 auto;padding:0 16px}
    h1{font-size:20px;margin:0} .tag{font-size:12px;opacity:.9}
    main{max-width:1000px;margin:18px auto;padding:0 16px;display:grid;gap:16px;grid-template-columns:1.2fr .8fr}
    @media (max-width:900px){main{grid-template-columns:1fr}}
    .panel{background:var(--card);border-radius:var(--r);box-shadow:0 6px 22px rgba(0,0,0,.06);padding:14px}
    .toolbar{display:flex;justify-content:space-between;align-items:center}
    .pill{background:#eef2ff;color:#3730a3;padding:4px 10px;border-radius:999px;font-size:12px}
    .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(170px,1fr));gap:12px;margin-top:10px}
    .card{background:#fff;border-radius:12px;overflow:hidden;box-shadow:0 4px 16px rgba(0,0,0,.06)}
    .card img{width:100%;height:150px;object-fit:cover;background:#e5e7eb;display:block}
    .meta{font-size:12px;color:var(--muted);display:flex;justify-content:space-between;padding:6px 8px}
    .drop{border:2px dashed #cbd5e1;border-radius:var(--r);padding:18px;background:#f1f5f9;text-align:center}
    .drop.drag{border-color:var(--uva-orange);background:#fff7ed}
    .field{display:flex;gap:10px;flex-wrap:wrap;justify-content:center;margin-top:8px}
    .btn{appearance:none;border:none;background:var(--uva-orange);color:#fff;padding:10px 14px;border-radius:12px;font-weight:600;cursor:pointer}
    .btn:disabled{opacity:.6;cursor:not-allowed}
    .muted{color:var(--muted);font-size:14px}
    .toast{position:fixed;right:16px;bottom:16px;background:#111827;color:#fff;padding:10px 14px;border-radius:12px;box-shadow:0 10px 30px rgba(0,0,0,.25);opacity:0;transform:translateY(8px);transition:all .25s}
    .toast.show{opacity:1;transform:translateY(0)}
  </style>
</head>
<body>
  <header>
    <div class="wrap">
      <h1>Lanternfly Gallery</h1>
      <div class="tag">University of Virginia · Applied Analytics Forestry Service</div>
    </div>
  </header>

  <main>
    <section class="panel">
      <div class="toolbar">
        <strong>Gallery</strong>
        <span class="pill"><span id="count">0</span> images</span>
      </div>
      <div id="grid" class="grid"></div>
      <p id="empty" class="muted" style="display:none;margin-top:10px">No images yet. Upload one →</p>
    </section>

    <section class="panel">
      <strong>Upload</strong>
      <div id="drop" class="drop" tabindex="0">
        <p class="muted" style="margin:0 0 8px 0">Use your phone’s camera or select a file</p>
        <div class="field">
          <input id="file" type="file" accept="image/*" capture="environment">
          <button id="upload" class="btn" disabled>Upload</button>
        </div>
        <p id="hint" class="muted" style="margin-top:8px"></p>
      </div>
    </section>
  </main>

  <div id="toast" class="toast"></div>

  <script>
    const grid=document.getElementById('grid'), empty=document.getElementById('empty'), count=document.getElementById('count');
    const input=document.getElementById('file'), btn=document.getElementById('upload'), drop=document.getElementById('drop'), hint=document.getElementById('hint');
    const toast=document.getElementById('toast');
    const showToast=m=>{toast.textContent=m;toast.classList.add('show');setTimeout(()=>toast.classList.remove('show'),1600);};

    async function loadGallery(){
      const r = await fetch('/api/v1/gallery');
      const j = await r.json();
      const list = j.gallery || [];
      grid.innerHTML=''; count.textContent=list.length; empty.style.display=list.length?'none':'block';
      for (const url of list){
        const name = decodeURIComponent(url.split('/').pop());
        const card = document.createElement('div'); card.className='card';
        card.innerHTML = `<img src="${url}" alt="${name}"><div class="meta"><span title="${name}">${name.length>18?name.slice(0,18)+'…':name}</span><a href="${url}" target="_blank" rel="noopener">open</a></div>`;
        grid.appendChild(card);
      }
    }
    function setFile(f){ if(!f){btn.disabled=true; hint.textContent=''; return} btn.disabled=false; hint.textContent=`Ready: ${f.name} (${Math.round(f.size/1024)} KB)`; }
    input.addEventListener('change', e=> setFile(e.target.files[0]));
    btn.addEventListener('click', async ()=>{
      const f = input.files[0]; if(!f) return;
      btn.disabled=true; const fd=new FormData(); fd.append('file', f);
      const r = await fetch('/api/v1/upload', {method:'POST', body:fd});
      if(!r.ok){ showToast('Upload failed'); btn.disabled=false; return; }
      showToast('Uploaded ✓'); input.value=''; setFile(null); await loadGallery();
    });
    ['dragenter','dragover'].forEach(evt=>drop.addEventListener(evt,e=>{e.preventDefault(); drop.classList.add('drag');}));
    ['dragleave','drop'].forEach(evt=>drop.addEventListener(evt,e=>{e.preventDefault(); drop.classList.remove('drag');}));
    drop.addEventListener('drop', e=>{ const f=e.dataTransfer.files?.[0]; if(f){ input.files=e.dataTransfer.files; setFile(f); }});
    loadGallery();
  </script>
</body>
</html>
